{# Global dictionaries for port roles #}
{%- set ports_roles1 = {} %}
{%- set ports_roles2 = {} %}
{%- set ports_roles3 = {} %}
{%- set uplink_ports = [] %}
{%- set downlink_ports = [] %}
{%- set role_to_ports = {} %}
{%- set role_hierarchy = ['server', 'torrouter', 'leafrouter', 'spinerouter', 'regionalhub', 'aznghub'] %}

{%- macro determine_switch_role() %}
    {%- set switch_role = '' %}
    {%- set switch_idx = -1 %}
    {%- if DEVICE_METADATA is defined and DEVICE_METADATA['localhost']['type'] is defined %}
        {%- set switch_role = DEVICE_METADATA['localhost']['type'] %}
        {# Determine switch index in the role hierarchy #}
        {%- for idx in range(role_hierarchy|length) %}
            {%- if role_hierarchy[idx] in switch_role | lower %}
                {%- set switch_idx = idx %}
                {%- break %}
            {%- endif %}
        {%- endfor %}
    {%- endif %}
    {# Return as a tuple: role, index #}
    {{ [switch_role, switch_idx] }}
{%- endmacro -%}

{%- macro determine_ports_roles(port_list) %}
    {%- set switch_info = determine_switch_role() %}
    {%- set switch_role = switch_info[0] %}
    {%- set switch_idx = switch_info[1] %}
    
    {%- set _ = role_to_ports.clear() %}
    {%- set _ = uplink_ports.clear() %}
    {%- set _ = downlink_ports.clear() %}
    
    {# Initialize role_to_ports dictionary with empty lists for each role #}
    {%- for role in role_hierarchy %}
        {%- set _ = role_to_ports.update({role: []}) %}
    {%- endfor %}
    {%- set _ = role_to_ports.update({'unknown': []}) %}
    
    {%- if DEVICE_NEIGHBOR is defined %}
        {%- for port_name in port_list %}
            {%- if port_name in DEVICE_NEIGHBOR %}
                {%- if DEVICE_NEIGHBOR_METADATA is defined and DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[port_name].name] %}
                    {%- set neighbor = DEVICE_NEIGHBOR_METADATA[DEVICE_NEIGHBOR[port_name].name] %}
                    {%- set neighbor_role = neighbor.type %}
                    {%- if 'edgezoneaggregator' == neighbor_role | lower %}
                        {%- set neighbor_role = 'LeafRouter' %}
                    {%- endif %}
                    {%- if 'asic' == neighbor_role | lower %}
                        {%- set _ = ports_roles1.update({port_name: 'internal'}) %}
                    {%- else %}
                        {%- set roles1 = switch_role + '_' + neighbor_role %}
                        {%- set roles2 = neighbor_role + '_' + switch_role %}
                        {%- set roles1 = roles1 | lower %}
                        {%- set roles2 = roles2 | lower %}
                        {%- set roles1 = roles1.replace('backend', '') %}
                        {%- set roles2 = roles2.replace('backend', '') %}
                        {%- set _ = ports_roles1.update({port_name: roles1}) %}
                        {%- set _ = ports_roles2.update({port_name: roles2}) %}
                        
                        {# Add port to role_to_ports dictionary based on neighbor role #}
                        {%- set neighbor_role_lower = neighbor_role | lower %}
                        {%- for role in role_hierarchy %}
                            {%- if role in neighbor_role_lower %}
                                {%- if role_to_ports[role].append(port_name) %}{% endif %}
                                {%- break %}
                            {%- endif %}
                        {%- endfor %}
                    {%- endif %}
                {%- endif %}
            {%- elif port_name.startswith('Ethernet-BP') %}
                {%- set _ = ports_roles1.update({port_name: 'internal'}) %}
            {%- elif 'torrouter' in switch_role.lower() and 'mgmt' not in switch_role.lower()%}
                {%- for local_port in VLAN_MEMBER %}
                    {%- if local_port[1] == port_name %}
                        {%- set roles3 = switch_role + '_' + 'server' %}
                        {%- set roles3 = roles3 | lower %}
                        {%- set roles3 = roles3.replace('backend', '') %}
                        {%- set _ = ports_roles1.update({port_name: roles3}) %}
                        {%- set _ = ports_roles3.update({port_name: roles3}) %}
                        {%- if role_to_ports['server'].append(port_name) %}{% endif %}
                    {%- endif %}
                {%- endfor %}
            {%- else %}
                {%- if role_to_ports['unknown'].append(port_name) %}{% endif %}
            {%- endif %}
        {%- endfor %}
    {%- endif %}
    
    {# If switch role is found in hierarchy, classify ports #}
    {%- if switch_idx >= 0 %}
        {# Combine all uplink port lists (roles higher than the switch) #}
        {%- for idx in range(switch_idx + 1, role_hierarchy|length) %}
            {%- set uplink_role = role_hierarchy[idx] %}
            {%- set _ = uplink_ports.extend(role_to_ports[uplink_role]) %}
        {%- endfor %}
        
        {# Combine all downlink port lists (roles lower than the switch) #}
        {%- for idx in range(switch_idx) %}
            {%- set downlink_role = role_hierarchy[idx] %}
            {%- set _ = downlink_ports.extend(role_to_ports[downlink_role]) %}
        {%- endfor %}
    {%- endif %}
{%- endmacro -%}

{%- macro determine_cable_length(port_name, port_dpc_list, ports2cable, default_cable='5m') %}
    {# Calculate cable length based on port roles #}
    {%- if port_name in port_dpc_list -%}
        {{ '0m' }}
    {%- elif port_name in ports_roles1 and ports_roles1[port_name] in ports2cable -%}
        {{ ports2cable[ports_roles1[port_name]] }}
    {%- elif port_name in ports_roles2 and ports_roles2[port_name] in ports2cable -%}
        {{ ports2cable[ports_roles2[port_name]] }}
    {%- elif port_name in ports_roles3 and ports_roles3[port_name] in ports2cable -%}
        {{ ports2cable[ports_roles3[port_name]] }}
    {%- else -%}
        {{ default_cable }}
    {%- endif %}
{%- endmacro -%}

{%- macro get_port_role(port_name) %}
    {%- if port_name in ports_roles1 -%}
        {{ ports_roles1[port_name] }}
    {%- elif port_name in ports_roles2 -%}
        {{ ports_roles2[port_name] }}
    {%- elif port_name in ports_roles3 -%}
        {{ ports_roles3[port_name] }}
    {%- else -%}
        {{ 'unknown' }}
    {%- endif %}
{%- endmacro -%}

{%- macro is_port_of_role(port_name, role_to_check) %}
    {%- set port_role = get_port_role(port_name) %}
    {%- if port_role == role_to_check %}
        {{ 'true' }}
    {%- else %}
        {{ 'false' }}
    {%- endif %}
{%- endmacro %}

{%- macro is_uplink_port(port_name) %}
    {%- if port_name in uplink_ports %}
        {{ 'true' }}
    {%- else %}
        {{ 'false' }}
    {%- endif %}
{%- endmacro %}

{%- macro is_downlink_port(port_name) %}
    {%- if port_name in downlink_ports %}
        {{ 'true' }}
    {%- else %}
        {{ 'false' }}
    {%- endif %}
{%- endmacro %}

