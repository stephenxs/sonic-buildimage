#!/usr/bin/env python
#
# process-reboot-cause
#
# Program designed to run once, soon after system boot which will
# determine the cause of the previous reboot and store it to the disk,
#

try:
    import os
    import pwd
    import sys
    import syslog
except ImportError as err:
    raise ImportError("%s - required module not found" % str(err))

VERSION = "1.0"

SYSLOG_IDENTIFIER = "process-reboot-cause"

REBOOT_CAUSE_DIR = "/host/reboot-cause/"
REBOOT_CAUSE_FILE = REBOOT_CAUSE_DIR + "reboot-cause.txt"
PREVIOUS_REBOOT_CAUSE_FILE = REBOOT_CAUSE_DIR + "previous-reboot-cause.txt"

UNKNOWN_REBOOT_CAUSE = "Unknown"


# ========================== Syslog wrappers ==========================

def log_info(msg):
    syslog.openlog(SYSLOG_IDENTIFIER)
    syslog.syslog(syslog.LOG_INFO, msg)
    syslog.closelog()


def log_warning(msg):
    syslog.openlog(SYSLOG_IDENTIFIER)
    syslog.syslog(syslog.LOG_WARNING, msg)
    syslog.closelog()


def log_error(msg):
    syslog.openlog(SYSLOG_IDENTIFIER)
    syslog.syslog(syslog.LOG_ERR, msg)
    syslog.closelog()


# ============================= Functions =============================

def main():
    log_info("Starting up...")

    if not os.geteuid() == 0:
        log_error("User {} does not have permission to execute".format(pwd.getpwuid(os.getuid()).pw_name))
        sys.exit("This utility must be run as root")

    # Create REBOOT_CAUSE_DIR if it doesn't exist
    if not os.path.exists(REBOOT_CAUSE_DIR):
        os.makedirs(REBOOT_CAUSE_DIR)

    # Remove stale PREVIOUS_REBOOT_CAUSE_FILE if it exists
    if os.path.exists(PREVIOUS_REBOOT_CAUSE_FILE):
        os.remove(PREVIOUS_REBOOT_CAUSE_FILE)


    # Set a default previous reboot cause
    previous_reboot_cause = UNKNOWN_REBOOT_CAUSE

    # Until all platform vendors have provided sonic_platform packages,
    # if there is no sonic_platform package installed, we only provide
    # software-related reboot causes.
    try:
        import sonic_platform.platform

        # Check if the previous reboot was caused by hardware
        platform = sonic_platform.platform.Platform()

        chassis = platform.get_chassis()

        hardware_reboot_cause, optional_details = chassis.get_reboot_cause()

        if hardware_reboot_cause == chassis.REBOOT_CAUSE_NON_HARDWARE:
            # The reboot was not caused by hardware. If there is a REBOOT_CAUSE_FILE, it will
            # contain any software-related reboot info. We will use it as the previous cause.
            if os.path.isfile(REBOOT_CAUSE_FILE):
                cause_file = open(REBOOT_CAUSE_FILE, "r")
                previous_reboot_cause = cause_file.readline().rstrip('\n')
                cause_file.close()
        elif hardware_reboot_cause == chassis.REBOOT_CAUSE_HARDWARE_OTHER:
            previous_reboot_cause = "{} ({})".format(hardware_reboot_cause, optional_details)
        else:
            previous_reboot_cause = hardware_reboot_cause
    except ImportError as err:
        log_warning("sonic_platform package not installed. Unable to detect hardware reboot causes.")

        # If there is a REBOOT_CAUSE_FILE, it will contain any software-related
        # reboot info. We will use it as the previous cause.
        if os.path.isfile(REBOOT_CAUSE_FILE):
            cause_file = open(REBOOT_CAUSE_FILE, "r")
            previous_reboot_cause = cause_file.readline().rstrip('\n')
            cause_file.close()

    # Write the previous reboot cause to PREVIOUS_REBOOT_CAUSE_FILE
    prev_cause_file = open(PREVIOUS_REBOOT_CAUSE_FILE, "w")
    prev_cause_file.write(previous_reboot_cause)
    prev_cause_file.close()

    # Also log the previous reboot cause to the syslog
    log_info("Previous reboot cause: {}".format(previous_reboot_cause))

    # Remove the old REBOOT_CAUSE_FILE
    os.remove(REBOOT_CAUSE_FILE)

    # Write a new default reboot cause file for the next reboot
    cause_file = open(REBOOT_CAUSE_FILE, "w")
    cause_file.write(UNKNOWN_REBOOT_CAUSE)
    cause_file.close()


if __name__ == "__main__":
    main()
